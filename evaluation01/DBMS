Given UNF  : 

     CustomerID  , Customer_Name ,ContactNumber, Email ,RegisteredDate ,
     booking_id ,booking_number ,bus_id,bus_number,bus_type,
     route_start_location,route_end_location, departure_time ,arrival_time,
    PaymentID, BookingID, Amount, PaymentMethod, PaymentDate.

    ticket1_seat_number ,ticket1_seat_price,
    ticket2_seat_number,ticket2_seat_price,
    ticket3_seat_number, ticket3_seat_price 

--------------------------------------------------------------------------------------------------------------------------------------

Formed 1NF :

Customers : CustomerID, Customer_Name, ContactNumber, Email, RegisteredDate
Bus Details : BusID, BusNumber, BusType
Bus Route : RouteID, StartLocation, EndLocation, Distance
Bus Schedules : ScheduleID, BusID, RouteID, DepartureTime, ArrivalTime, DepartureLocation, ArrivalLocation
Bus Bookings : BookingID, CustomerID, ScheduleID, SeatNumber, BookingDate, Status
Bus Payments : PaymentID, BookingID, Amount, PaymentMethod, PaymentDate


I am Nimisha, and I have booked tickets for my family for a bus journey from Tvm to Kozhikode on sleeper bus with bus no 201  
operated by our travel agency
travel_date: 2024-11-20, departure_time: 8:00 AM, arrival_time: 12:00 PM
seat_numbers: [L1, L2, L3], each seat price is Rs.550
And
I have booked tickets for my parents for a bus journey from Ernakulam to Varkala on bus number 202 operated by KSRTC.
travel_date: 2024-11-21 , departure_time: 9:30 AM, arrival_time: 1:30 PM
seat_numbers: [L3, L2], each seat price is Rs.250

Requirements:
Provide the table creation scripts in Oracle for the bus ticket reservation system. 
Include primary keys, NOT NULL constraints, and foreign keys where appropriate.
Provide sample INSERT statements for each table to input the given data.
Present the data in a tabular format, ensuring normalization up to at least 3NF. 

----------------solution--------------------------------

-- Table for customers
CREATE TABLE Customers (
    CustomerID INT  PRIMARY KEY ,
    Customer_Name VARCHAR(50) NOT NULL,
    ContactNumber VARCHAR(15 NOT NULL),
    Email VARCHAR(100) NOT NULL,
    RegisteredDate DATE NOT NULL 
);

-- Table for bus_details
CREATE TABLE BUS_DETAILS
(
BusID NUMBER  PRIMARY KEY,
BusNumber NUMBER NOT NULL,
Type VARCHAR(125) NOT NULL
);

CREATE TABLE BUS_ROUTES
(
RouteID NUMBER PRIMARY KEY,
START_LOCATION VARCHAR(125) NOT NULL,
END_LOCATION VARCHAR(125) NOT NULL,
DISTANCE NUMBER NOT NULL
);

-- Table for Bus_Schedule
CREATE TABLE Bus_Schedules (
    ScheduleID NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 501 INCREMENT BY 10 PRIMARY KEY ,
    BusID INT NOT NULL,
    RouteID INT NOT NULL,
    DepartureTime DATE,
    ArrivalTime DATE,
    FOREIGN KEY (BusID) REFERENCES BUS_DETAILS(BusID),
    FOREIGN KEY (RouteID) REFERENCES BUS_ROUTES(RouteID)
);

-- Table for bookings
CREATE TABLE Bookings (
    BookingID INT PRIMARY KEY,
    CustomerID INT,
     ScheduleID INT,
    SeatNumber varchar(50),
    BookingDate DATE DEFAULT CURRENT_DATE,
    BookingStatus VARCHAR(20),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (ScheduleID) REFERENCES Bus_Schedules(ScheduleID)
);

-- Table for payments
CREATE TABLE Payments (
    PaymentID INT PRIMARY KEY,
    BookingID INT,
    Amount DECIMAL(8, 2),
    PaymentMethod VARCHAR(20),
    PaymentDate DATE DEFAULT CURRENT_DATE,
    FOREIGN KEY (BookingID) REFERENCES Bookings(BookingID)
);

--insert data into customers table

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email, RegisteredDate)
VALUES (1, 'Nimisha ', '555-1234', 'nimisha@example.com', TO_DATE('2024-11-01' , 'YYYY-MM-DD'));

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email, RegisteredDate) 
VALUES(2, 'Ayisha', '555-5678', 'ayisha@example.com', TO_DATE('2024-10-15' , 'YYYY-MM-DD'));

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email, RegisteredDate) 
VALUES(3, 'Sana', '555-8765', 'sana@example.com', TO_DATE('2024-09-20' , 'YYYY-MM-DD'));

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email, RegisteredDate) 
VALUES(4, 'Vinayak', '555-4321', 'vinayak@example.com', TO_DATE('2024-08-05' , 'YYYY-MM-DD'));

INSERT INTO Customers (CustomerID, Customer_Name, ContactNumber, Email, RegisteredDate) 
VALUES (5, 'Vishakh', '555-7890', 'vishakh@example.com', TO_DATE('2024-11-10', 'YYYY-MM-DD'));

--insert data into Bus_details table

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (101, 201, 'Sleeper');

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (102, 202, 'Semi-Sleeper');

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (103, 203, 'Luxury');

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (104, 204, 'Semi-Sleeper');

INSERT INTO Bus_details (BusID, BusNumber, Type)
VALUES (105, 205, 'Sleeper');

--insert data into Bus_Routes table

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (40, 'Ernakulam', 'Kannur',165);

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (42, 'Kozhikode', 'Ernakulam',80);

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (44, 'Trivandrum', 'Palakkad',135);

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (46, 'Trissur', 'Malappuram',30);

INSERT INTO Bus_Routes (RouteID, START_LOCATION, END_LOCATION, DISTANCE)
VALUES (48, 'Kasargod', 'Wayanad',75);

--insert data into Bus_Schedules table

INSERT INTO Bus_Schedules (BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES (101, 40, TO_DATE('2024-11-20 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-20 12:00:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO Bus_Schedules (BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES (102, 42, TO_DATE('2024-11-21 09:30:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-21 13:30:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO Bus_Schedules (BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES(103, 44, TO_DATE('2024-11-22 07:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-22 11:00:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO Bus_Schedules ( BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES (104, 46, TO_DATE('2024-11-23 10:15:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-23 14:15:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO Bus_Schedules (BusID, RouteID, DepartureTime, ArrivalTime) 
VALUES (105, 48, TO_DATE('2024-11-24 06:30:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-11-24 10:30:00', 'YYYY-MM-DD HH24:MI:SS'));

--insert data into Bookings table

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (10, 1, 501, 'L1', TO_DATE('2024-11-16', 'YYYY-MM-DD'), 'Booked');

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (20, 2, 511, 'L2', TO_DATE('2024-11-10', 'YYYY-MM-DD'), 'Not Booked');

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (30, 4, 521, 'U1', TO_DATE('2024-11-05', 'YYYY-MM-DD'), 'Booked');

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (40, 3, 531, 'U1', TO_DATE('2024-11-03', 'YYYY-MM-DD'), 'Not Booked');

INSERT INTO Bookings (BookingId, CustomerID, ScheduleID, SeatNumber, BookingDate, BookingStatus)
VALUES (50, 5, 541, 'U2', TO_DATE('2024-10-21', 'YYYY-MM-DD'), 'Booked');

--insert data into Payments table

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (1, 10, 150.00, 'Credit Card', TO_DATE('2024-11-16', 'YYYY-MM-DD'));

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (2, 20, 0.00, 'N/A', TO_DATE('2024-11-10', 'YYYY-MM-DD'));

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (3, 30, 300.00, 'Cash', TO_DATE('2024-11-05', 'YYYY-MM-DD'));

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (4, 40, 0.00, 'N/A', TO_DATE('2024-11-03', 'YYYY-MM-DD'));

INSERT INTO Payments (PaymentID, BookingID, Amount, PaymentMethod, PaymentDate)
VALUES (5, 50, 200.00, 'Online', TO_DATE('2024-10-21', 'YYYY-MM-DD'));


Tabular Data Representation

Customer Table 

CustomerID | CustomerName | ContactNumber | Email                   | RegisteredDate
----------------------------------------------------------------------------------------
1          | Nimisha      | 555-1234      | nimisha@example.com     | 2024-11-01
2          | Ayisha       | 555-5678      | ayisha@example.com      | 2024-10-15
3          | Sana         | 555-8765      | sana@example.com        | 2024-09-20
4          | Vinayak      | 555-4321      | vinayak@example.com     | 2024-08-05
5          | Vishakh      | 555-7890      | vishakh@example.com     | 2024-11-10


Bus_Details Table 

BusID | BusNumber | Type
-----------------------------------
101   | 201       | Sleeper
102   | 202       | Semi-Sleeper
103   | 203       | Luxury
104   | 204       | Semi-Sleeper
105   | 205       | Sleeper

Bus_Route Table 

RouteID | StartLocation | EndLocation | Distance
---------------------------------------------------
40      | Ernakulam     | Kannur      | 165
42      | Kozhikode     | Ernakulam   | 80
44      | Trivandrum    | Palakkad    | 135
46      | Trissur       | Malappuram  | 30
48      | Kasargod      | Wayanad     | 75

Bus_Schedule  Table 

| ScheduleID | BusID | RouteID | DepartureTime          | ArrivalTime            
|------------|-------|---------|------------------------|------------------------
| 501        | 101   | 40      | 2024-11-20 08:00:00    | 2024-11-20 12:00:00    
| 511        | 102   | 42      | 2024-11-21 09:30:00    | 2024-11-21 13:30:00      
| 521        | 103   | 44      | 2024-11-22 07:00:00    | 2024-11-22 11:00:00    
| 531        | 104   | 46      | 2024-11-23 10:15:00    | 2024-11-23 14:15:00         
| 541        | 105   | 48      | 2024-11-24 06:30:00    | 2024-11-24 10:30:00    

Bookings  Table

BookingID | CustomerID | ScheduleID | SeatNumber | BookingDate | BookingStatus
-------------------------------------------------------------------------------------------
10        | 1          | 501        | L1         | 2024-11-16  | Booked
20        | 2          | 511        | L2         | 2024-11-10  | Not Booked
30        | 4          | 521        | U1         | 2024-11-05  | Booked
40        | 3          | 531        | U1         | 2024-11-03  | Not Booked
50        | 5          | 541        | U2         | 2024-10-21  | Booked

Payments Table

PaymentID | BookingID | Amount | PaymentMethod | PaymentDate
-------------------------------------------------------------
1         | 10        | 150.00 | Credit Card   | 2024-11-16
2         | 20        | 0.00   | N/A           | 2024-11-10
3         | 30        | 300.00 | Cash          | 2024-11-05
4         | 40        | 0.00   | N/A           | 2024-11-03
5         | 50        | 200.00 | Online        | 2024-10-21


ALTER TABLE customers 
ADD (
    aadhaar_id VARCHAR2(12)
);

update customers set aadhaar_id = '5553 8416' where CustomerID = 1;
UPDATE customers SET aadhaar_id = '5553 8417' WHERE CustomerID = 2;
UPDATE customers SET aadhaar_id = '5553 8418' WHERE CustomerID = 3;
UPDATE customers SET aadhaar_id = '5553 8419' WHERE CustomerID = 4;
UPDATE customers SET aadhaar_id = '5553 8420' WHERE CustomerID = 5;

| CustomerID | CustomerName | ContactNumber | Email                   | RegisteredDate | aadhaar_id 
|------------|--------------|---------------|-------------------------|----------------|------------
| 1          | Nimisha      | 555-1234      | nimisha@example.com     | 2024-11-01     | 5553 8416  
| 2          | Ayisha       | 555-5678      | ayisha@example.com      | 2024-10-15     | 5553 8417  
| 3          | Sana         | 555-8765      | sana@example.com        | 2024-09-20     | 5553 8418  
| 4          | Vinayak      | 555-4321      | vinayak@example.com     | 2024-08-05     | 5553 8419  
| 5          | Vishakh      | 555-7890      | vishakh@example.com     | 2024-11-10     | 5553 8420  


// queries

1. Write an SQL query to retrieve complete booking details for all customers. The result should include the customer's information such as ID, name, contact number, email, and 
registration date, along with the bus details, departure and arrival time , departure and arrival locations, payment method, payment amount, and payment date (if any).

SELECT 
    c.CustomerID,
    c.Customer_Name,
    c.ContactNumber,
    c.Email,
    c.RegisteredDate,
    b.BusNumber,
    bo.SeatNumber,
    TO_CHAR(bs.DepartureTime, 'YYYY-MM-DD HH24:MI:SS') AS DepartureTime,  -- Explicit format
    TO_CHAR(bs.ArrivalTime, 'YYYY-MM-DD HH24:MI:SS') AS ArrivalTime,        -- Explicit format
    p.PaymentMethod,
    p.Amount AS PaymentAmount,
    p.PaymentDate AS PaymentDate,
    bo.BookingStatus
FROM 
    Customers c
INNER JOIN 
    Bookings bo ON c.CustomerID = bo.CustomerID
INNER JOIN 
    Bus_Schedules bs ON bo.ScheduleID = bs.ScheduleID
INNER JOIN 
    Bus_details b ON bs.BusID = b.BusID
LEFT JOIN 
    Payments p ON bo.BookingId = p.BookingID
ORDER BY 
    c.CustomerID, bo.BookingId;

2. Retrieve the details of all customers who have made at least one booking.

SELECT * 
FROM Customers 
WHERE CustomerID IN (SELECT CustomerID FROM Bookings);

3.  Retrieve the details of the bus that is associated with the schedule having ScheduleID 501.

SELECT * 
FROM Bus_details 
WHERE BusID = (SELECT BusID FROM Bus_Schedules WHERE ScheduleID = 501);

4. Write a query to retrieve the total number of distinct bookings and the average payment amount for each bus.
   The result should be ordered by the average payment amount in descending order.

SELECT 
    bs.BusID,
    COUNT( bok.BookingId) AS TotalBookings,
    AVG(p.Amount) AS AveragePayment
FROM 
    Bookings bok
JOIN 
    Payments p ON bok.BookingId = p.BookingID
JOIN 
    Bus_Schedules bs ON bok.ScheduleID = bs.ScheduleID
GROUP BY 
    bs.BusID
ORDER BY 
    AveragePayment desc ;

