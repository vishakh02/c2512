function readSalaries(salaries -> [int], size -> int& )->int
    salary=0
    size = 0
    print "Enter salaries (-1 to stop):"
    while (true)
        cin >> salary;
        if (salary == -1) 
            break;
        end if
        if (size < MAX_SALARIES) 
            salaries[size] = (salary); 
            size++; 
        else            
	    cout << "Maximum number of salaries reached." <<endl;
            break;
        end if
    end while

  
function findSum(salaries -> [int], size -> int) -> int 
  sum = 0 -> int
  for I = 0 to size-1
     sum += salaries [I]  
  end for
  return sum
  
function findAverage(salaries -> [int], size -> int) -> float
  return findSum()/size
    
function isPrime(number -> int) -> bool 
 for I = 2 to sqrt(number)
    if number[I] % I == 0
      return false
    return true
    
function findPrimeSalariesCount(salaries -> [int], size -> int) -> int 
 primeCount = 0
      for I = 0 to size - 1
        if isPrime(salaries[I])
             primeCount++
        end if
      end for
 return  primeCount
  
function isNumberMinimum4Digit(number -> int) -> bool 
  while number > 999
       return true
    end while
  return false
  
function findMin4DigitSalariesCount(salaries -> [int], size -> int) -> int 
    count = 0
      for I = 0 to size - 1
        if isNumberMinimum4Digit(salaries[I])
            count++
        end if
      end for
 return count
  
function findMaxSalary(salaries -> [int], size -> int) -> int 

maxSalary = INT_MIN
for I = 0 to size - 1
        if maxSalary<salaries[I]
           maxSalary = salaries[I]
        end if
 end for
return maxSalary
  
function isOdd(number -> int) -> bool
 
    if number % 2 != 0
    
      return true
    end if
    return false
  
function findSumOfOddSalaries(salaries -> [int], size -> int) -> int
  sum = 0
      for I = 0 to size - 1
        if isOdd(salaries[I])
            
            sum += salaries[I]
        end if
      end for
 return sum
  
function find2ndMinOddSalary(salaries -> [int], size -> int) -> int
    int minsalary = INT_MAX;
    int second_min_salary = INT_MAX;
    for  I = 0 to size - 1
        if (isOdd(salaries[i]))
            if (minsalary > salaries[i])
                second_min_salary = minsalary;
                minsalary = salaries[i];
            end if
        end if
    end for
    return second_min_salary;
  
function test()
 size = 0
    readSalaries(salaries, size) 
    averageSalary = findAverage(salaires, size)
    primeSalariesCount = findPrimeSalariesCount(salaires, size)
    min4DigitSalariesCount = findMin4DigitSalariesCount(salaires, size)
    maxSalary = findMaxSalary(salaires, size)
    sumOfOddSalaries = findSumOfOddSalaries(salaires, size)
    secondMinOddSalary = find2ndMinOddSalary(salaires, size)
    print averageSalary
    print primeSalariesCount
    print min4DigitSalariesCount
    print maxSalary
    print sumOfOddSalaries
    print secondMinOddSalary
      if isPrime(maxSalary) 
          print "Max Salary is prime"
      else 
          print "Max Salary is not prime"  
    
 
pseudo Main
test() 
==============================================================   cpp code    =======================================================================================

          #include <iostream>
#include <cmath>
#include <climits>
#include <cstdlib>
using std::cout;
using std::cin;
using std::endl;

const int MAX_SALARIES = 100;

void readSalaries(int salaries[], int& size) {
    int salary;
    size = 0; 

    cout << "Enter salaries (-1 to stop):" << endl;

    while (true) {
        cin >> salary;
        if (salary == -1) {
            break;
        }
        if (size < MAX_SALARIES) { 
            salaries[size] = (salary); 
            size++;
            
        } else {
            cout << "Maximum number of salaries reached." <<endl;
            break;
        }
    }
}



int findSum(int salaries[], int size) 
{
    int sum = 0;
    for (int i = 0; i < size; i++) 
    {
        sum += salaries[i];
    }
    return sum;
}

float findAverage( int salaries[], int size)
{
    if (size == 0)
    return 0; 
    float average = ((findSum(salaries, size)) / (float)size);
    return average;
}




bool isPrime(int number) 
{
    for (int i = 2; i<= sqrt(number); i++)
    {
        if ((number % i) == 0)
        {
             return false;
        }
         
    }
      return true;
}
  

  
int findPrimeSalariesCount(int salaries[], int size)
{
    int primeCount = 0;
    
    for (int i = 0; i < size; i++)
      {
        if (isPrime(salaries[i]))
        {
            primeCount++;
        }
      }
    return primeCount;
}



bool isNumberMinimum4Digit(int number)
{
    
  
  while (number > 999){
       return true;
  }
  return false;
}


  
int findMin4DigitSalariesCount( int salaries[],int size){
     int count = 0;
      for(int i=0;i<size;i++){
        if (isNumberMinimum4Digit(salaries[i])){
            count++;
        }
      }
 return count;
}



int findMaxSalary(int salaries[], int size) 
{
    int maxSalary = INT_MIN;
    
    for (int i=0; i<size; i++)
    {
        if (maxSalary<salaries[i])
        {
            maxSalary = salaries[i];
        }
    }
    
    return maxSalary; 
}

bool isOdd(int number)
{
    if (((number % 2) != 0))
    {
        return true;
    }
    else
    {
        return false;
   }
}


int findSumOfOddSalaries(int salaries[], int size)
{
    int sum = 0;
    for (int i = 0 ; i < size ; i++)
    {
        if (isOdd(salaries[i]))
        {
            sum += salaries[i];
        }
    }
    
    return sum;
}


int find2ndMinOddSalary(int salaries[], int size)
{
    int minsalary = INT_MAX;
    int second_min_salary = INT_MAX;
    for (int i = 0 ; i < size ; i++)
    {
        if (isOdd(salaries[i]))
        {
            if (minsalary > salaries[i])
            {
                second_min_salary = minsalary;
                minsalary = salaries[i];
                
            }
        }
    }
    return second_min_salary;
}



void test(void)
{
    int size;
    int salaries[MAX_SALARIES];
    
    readSalaries(salaries, size);
    
    float averageSalary = findAverage(salaries, size);
    
    int primeSalariesCount = findPrimeSalariesCount(salaries, size);
    
    int min4DigitSalariesCount = findMin4DigitSalariesCount(salaries, size);
    
    int maxSalary = findMaxSalary(salaries, size);
    
    int sumOfOddSalaries = findSumOfOddSalaries(salaries, size);
    
    int secondMinOddSalary = find2ndMinOddSalary(salaries, size);
    
    cout << "Average Salary: "<< averageSalary << endl;

    cout << "Prime Salaries Count: " << primeSalariesCount << endl;

    cout << "4-Digit Salaries Count: " << min4DigitSalariesCount << endl;

    cout << "Maximum Salary: " << maxSalary << endl;

    cout << "Sum of Odd Salaries: " << sumOfOddSalaries << endl;

    cout << "Second Minimum Odd Salary: "<<secondMinOddSalary<<endl;

    if (isPrime(maxSalary))
     {
         cout <<  "Max Salary is prime" <<endl;
    }
    else
    {
        
        cout << "Max Salary is not prime" <<endl;
    }
}

int main(void)
{
    test();
    
 return EXIT_SUCCESS;
}
